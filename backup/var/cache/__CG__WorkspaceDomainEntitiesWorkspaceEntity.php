<?php

namespace DoctrineProxies\__CG__\Workspace\Domain\Entities;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WorkspaceEntity extends \Workspace\Domain\Entities\WorkspaceEntity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'id', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'name', 'creditCount', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'isTrialed', 'address', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'createdAt', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'updatedAt', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'owner', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'users', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'invitations', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'subscriptions', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'subscription'];
        }

        return ['__isInitialized__', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'id', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'name', 'creditCount', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'isTrialed', 'address', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'createdAt', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'updatedAt', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'owner', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'users', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'invitations', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'subscriptions', '' . "\0" . 'Workspace\\Domain\\Entities\\WorkspaceEntity' . "\0" . 'subscription'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WorkspaceEntity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): \Shared\Domain\ValueObjects\Id
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): \Workspace\Domain\ValueObjects\Name
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(\Workspace\Domain\ValueObjects\Name $name): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditCount(): \Billing\Domain\ValueObjects\Count
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditCount', []);

        return parent::getCreditCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCreditCount(): \Billing\Domain\ValueObjects\Count
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCreditCount', []);

        return parent::getTotalCreditCount();
    }

    /**
     * {@inheritDoc}
     */
    public function addCredits(\Billing\Domain\ValueObjects\Count $count): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCredits', [$count]);

        return parent::addCredits($count);
    }

    /**
     * {@inheritDoc}
     */
    public function deductCredit(\Billing\Domain\ValueObjects\Count $count): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'deductCredit', [$count]);

        return parent::deductCredit($count);
    }

    /**
     * {@inheritDoc}
     */
    public function isEligibleForTrial(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEligibleForTrial', []);

        return parent::isEligibleForTrial();
    }

    /**
     * {@inheritDoc}
     */
    public function isEligibleForFreePlan(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEligibleForFreePlan', []);

        return parent::isEligibleForFreePlan();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress(): ?\Workspace\Domain\ValueObjects\Address
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', []);

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress(\Workspace\Domain\ValueObjects\Address $address): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', [$address]);

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): \DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner(): \User\Domain\Entities\UserEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\User\Domain\Entities\UserEntity|\Shared\Domain\ValueObjects\Id $owner): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers(): \Traversable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\User\Domain\Entities\UserEntity $user): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$user]);

        return parent::addUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\User\Domain\Entities\UserEntity|\Shared\Domain\ValueObjects\Id $user): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', [$user]);

        return parent::removeUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getInvitations(): \Traversable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvitations', []);

        return parent::getInvitations();
    }

    /**
     * {@inheritDoc}
     */
    public function invite(\Workspace\Domain\ValueObjects\Email $email): \Workspace\Domain\Entities\WorkspaceInvitationEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'invite', [$email]);

        return parent::invite($email);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInvitation(\Workspace\Domain\Entities\WorkspaceInvitationEntity|\Shared\Domain\ValueObjects\Id $invitation): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInvitation', [$invitation]);

        return parent::removeInvitation($invitation);
    }

    /**
     * {@inheritDoc}
     */
    public function acceptInvitation(\Workspace\Domain\Entities\WorkspaceInvitationEntity|\Shared\Domain\ValueObjects\Id $invitation, \User\Domain\Entities\UserEntity $user): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'acceptInvitation', [$invitation, $user]);

        return parent::acceptInvitation($invitation, $user);
    }

    /**
     * {@inheritDoc}
     */
    public function getInvitationById(\Shared\Domain\ValueObjects\Id $id): \Workspace\Domain\Entities\WorkspaceInvitationEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInvitationById', [$id]);

        return parent::getInvitationById($id);
    }

    /**
     * {@inheritDoc}
     */
    public function addSubscription(\Billing\Domain\Entities\SubscriptionEntity $sub): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubscription', [$sub]);

        return parent::addSubscription($sub);
    }

    /**
     * {@inheritDoc}
     */
    public function subscribe(\Billing\Domain\Entities\SubscriptionEntity $sub): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'subscribe', [$sub]);

        return parent::subscribe($sub);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubscription(): \Workspace\Domain\Entities\WorkspaceEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubscription', []);

        return parent::removeSubscription();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscription(): ?\Billing\Domain\Entities\SubscriptionEntity
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscription', []);

        return parent::getSubscription();
    }

}
